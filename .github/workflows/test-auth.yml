name: run test auth
on:
  workflow_dispatch:
    inputs:
      editor_image:
        description: 'Editor Image'
        required: true
        default: 'deserializeme/gcicudaeditor:latest'
      selenium_image:
        description: 'Selenium Image'
        required: true
        default: 'deserializeme/gcicudaselenium:latest'
      editor_version:
        description: 'Editor Version'
        required: true
        default: '2022.1.23f1''

jobs:
  test-auth:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: generate alf
        run: |
          mkdir -p ./Downloads
          touch ./Downloads/Unity_v$EDITOR_VERSION.alf
          docker run --rm -it -v $(pwd):/home/player1 \
            -v $(pwd)/Downloads/Unity_v$EDITOR_VERSION.alf:/Unity_v${EDITOR_VERSION}.alf \
            --user 1000:1000 \
            $EDITOR_IMAGE \
            unity-editor -quit \
            -batchmode \
            -nographics \
            -logFile /dev/stdout \
            -createManualActivationFile \
            -username ${{ secrets.UNITY_USERNAME }} \
            -password ${{ secrets.UNITY_PASSWORD }}
        shell: bash
        env:
          EDITOR_VERSION: ${{github.event.inputs.editor_version}}
          EDITOR_IMAGE: ${{github.event.inputs.editor_image}}

      - name: generate ulf
        run: |
          docker run --rm -it -v $(pwd)/config.json:/home/player1/config.json \
            --mount type=bind,source="$(pwd)"/Downloads,target=/home/player1/Downloads \
            --user 1000:1000 \
            -e USERNAME=${{ secrets.UNITY_USERNAME }} \
            -e PASSWORD=${{ secrets.UNITY_PASSWORD }} \
            $SLENIUM_IMAGE \
            ./unity-self-auth/license.py Downloads/*.alf config.json
        shell: bash
        env:
          SELENIUM_IMAGE: ${{github.event.inputs.selenium_image}}

