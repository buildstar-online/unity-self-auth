
name: test auth
on:
  workflow_dispatch:
    inputs:
      editor_image:
        description: 'Editor Image'
        required: true
        default: 'deserializeme/gcicudaeditor:latest'
      selenium_image:
        description: 'Selenium Image'
        required: true
        default: 'deserializeme/gcicudaseleniumxfce:latest'
      editor_version:
        description: 'Editor Version'
        required: true
        default: '2022.1.23f1'
jobs:
  test-auth:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: setup
        run: |
          mkdir -p ./Downloads && \
          touch ./Downloads/Unity_v$EDITOR_VERSION.alf && \
          ls -hal / && \
          ls -hal ./Downloads
        shell: bash
        env:
          EDITOR_VERSION: ${{github.event.inputs.editor_version}}
          EDITOR_IMAGE: ${{github.event.inputs.editor_image}}
          
      - name: generate alf
        run: |
          ls -hal && \
          docker run --rm -v $(pwd)/Downloads/Unity_v$EDITOR_VERSION.alf:/Unity_v${EDITOR_VERSION}.alf \
            --user root \
            $EDITOR_IMAGE \
            unity-editor -quit \
            -batchmode \
            -nographics \
            -logFile /dev/stdout \
            -createManualActivationFile \
            -username ${{ secrets.UNITY_USERNAME }} \
            -password ${{ secrets.UNITY_PASSWORD }}
        shell: bash
        env:
          EDITOR_VERSION: ${{github.event.inputs.editor_version}}
          EDITOR_IMAGE: ${{github.event.inputs.editor_image}}
          
      - name: check
        run: |
          ls -hal ./Downloads
        shell: bash
        env:
          EDITOR_VERSION: ${{github.event.inputs.editor_version}}
          EDITOR_IMAGE: ${{github.event.inputs.editor_image}}
          
      - name: generate ulf
        run: |
          docker run --rm --mount type=bind,source=$(pwd)/Downloads,target=/home/player1/unity-self-auth/Downloads \
            --user 1000:1000 \
            -p 5900:5900 \
            -e USERNAME=${{ secrets.UNITY_USERNAME }} \
            -e PASSWORD=${{ secrets.UNITY_PASSWORD }} \
            -e HEADLESS=True \
            $SELENIUM_IMAGE ./license.py Downloads/Unity_v2022.1.23f1.alf
        shell: bash
        env:
          SELENIUM_IMAGE: ${{github.event.inputs.selenium_image}}
          EDITOR_VERSION: ${{github.event.inputs.editor_version}}

      - name: Store and Mask License Data
        run: |
          echo "reading ulf..."
          UNITY_LICENSE=$(cat ./Downloads/Unity_v$EDITOR_VERSION.alf)
          echo "::add-mask::$UNITY_LICENSE"
          echo UNITY_LICENSE=$UNITY_LICENSE >> $GITHUB_ENV
        shell: bash
        env:
          EDITOR_VERSION: ${{github.event.inputs.editor_version}}
          EDITOR_IMAGE: ${{github.event.inputs.editor_image}}
          
      - uses: gliech/create-github-secret-action@v1
        with:
          name: UNITY_LICENSE
          value: $UNITY_LICENSE
          pa_token: ${{ secrets.PAT }}
